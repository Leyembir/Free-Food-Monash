{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width;\nvar cardWidth = width * 0.8;\nvar App = function App() {\n  var _useState = useState({\n      monday: {\n        time: [],\n        event_name: [],\n        location: []\n      },\n      tuesday: {\n        time: [],\n        event_name: [],\n        location: []\n      },\n      wednesday: {\n        time: [],\n        event_name: [],\n        location: []\n      },\n      thursday: {\n        time: [],\n        event_name: [],\n        location: []\n      },\n      friday: {\n        time: [],\n        event_name: [],\n        location: []\n      }\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    scheduleData = _useState2[0],\n    setScheduleData = _useState2[1];\n  var _useState3 = useState(new Date()),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentTime = _useState4[0],\n    setCurrentTime = _useState4[1];\n  useEffect(function () {\n    var interval = setInterval(function () {\n      return setCurrentTime(new Date());\n    }, 60000);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, []);\n  var currentDate = currentTime.toLocaleString(\"en-US\", {\n    timeZone: \"Australia/Sydney\"\n  });\n  var currentDay = new Intl.DateTimeFormat('en-US', {\n    weekday: 'long',\n    timeZone: \"Australia/Sydney\"\n  }).format(currentTime).toLowerCase();\n  var currentHour = currentTime.getHours();\n  var currentMinute = currentTime.getMinutes();\n  var openGoogleMaps = function openGoogleMaps(location) {};\n  var isCurrentEvent = function isCurrentEvent(eventTime, eventDay) {};\n  useEffect(function () {\n    var fetchScheduleData = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var response = yield axios.get('https://free-food-monash-api-337668b48c95.herokuapp.com/json-object');\n          setScheduleData(response.data);\n        } catch (error) {\n          console.error('Error fetching data:', error);\n        }\n      });\n      return function fetchScheduleData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchScheduleData();\n  }, []);\n  return _jsxs(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: '#FF6900'\n    },\n    children: [_jsx(View, {\n      style: {\n        alignItems: 'center',\n        paddingVertical: 10\n      },\n      children: _jsx(Text, {\n        style: {\n          fontSize: 28,\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'Helvetica'\n        },\n        children: \"Monash Free Food Guide\"\n      })\n    }), _jsx(ScrollView, {\n      contentContainerStyle: {\n        alignItems: 'center',\n        paddingBottom: 16\n      },\n      children: Object.entries(scheduleData).map(function (_ref2) {\n        var _ref3 = _slicedToArray(_ref2, 2),\n          day = _ref3[0],\n          data = _ref3[1];\n        return _jsxs(View, {\n          style: {\n            marginBottom: 18,\n            width: cardWidth\n          },\n          children: [_jsx(Text, {\n            style: {\n              fontSize: 20,\n              fontWeight: 'bold',\n              color: 'white',\n              marginBottom: 8,\n              textAlign: 'center'\n            },\n            children: day.charAt(0).toUpperCase() + day.slice(1)\n          }), data.time.map(function (time, index) {\n            return _jsxs(View, {\n              style: {\n                marginBottom: 8,\n                borderRadius: 10,\n                overflow: 'hidden',\n                backgroundColor: isCurrentEvent(time, day) ? '#4CAF50' : 'white',\n                width: '100%'\n              },\n              children: [isCurrentEvent(time, day) && _jsx(Text, {\n                style: {\n                  fontSize: 16,\n                  fontWeight: 'bold',\n                  color: 'white',\n                  padding: 8,\n                  backgroundColor: '#4CAF50'\n                },\n                children: \"Happening now!\"\n              }), _jsxs(View, {\n                style: {\n                  padding: 12\n                },\n                children: [_jsx(Text, {\n                  style: {\n                    fontSize: 16,\n                    fontWeight: 'bold',\n                    color: isCurrentEvent(time, day) ? 'white' : 'black'\n                  },\n                  children: time\n                }), _jsx(Text, {\n                  style: {\n                    fontWeight: 'bold',\n                    color: isCurrentEvent(time, day) ? 'white' : 'black',\n                    marginTop: 4\n                  },\n                  children: data.event_name[index]\n                }), _jsx(TouchableOpacity, {\n                  onPress: function onPress() {\n                    return openGoogleMaps(data.location[index]);\n                  },\n                  children: _jsx(Text, {\n                    style: {\n                      color: isCurrentEvent(time, day) ? 'lightblue' : 'blue',\n                      textDecorationLine: 'underline',\n                      marginTop: 4\n                    },\n                    children: data.location[index]\n                  })\n                })]\n              })]\n            }, index);\n          })]\n        }, day);\n      })\n    }), _jsx(View, {\n      style: {\n        padding: 8,\n        alignItems: 'center'\n      },\n      children: _jsx(Text, {\n        style: {\n          color: 'white'\n        },\n        children: \"Created by Amir\\xA9\"\n      })\n    })]\n  });\n};\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","SafeAreaView","View","Text","ScrollView","TouchableOpacity","Linking","Dimensions","axios","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","cardWidth","App","_useState","monday","time","event_name","location","tuesday","wednesday","thursday","friday","_useState2","_slicedToArray","scheduleData","setScheduleData","_useState3","Date","_useState4","currentTime","setCurrentTime","interval","setInterval","clearInterval","currentDate","toLocaleString","timeZone","currentDay","Intl","DateTimeFormat","weekday","format","toLowerCase","currentHour","getHours","currentMinute","getMinutes","openGoogleMaps","isCurrentEvent","eventTime","eventDay","fetchScheduleData","_ref","_asyncToGenerator","response","data","error","console","apply","arguments","style","flex","backgroundColor","children","alignItems","paddingVertical","fontSize","fontWeight","color","fontFamily","contentContainerStyle","paddingBottom","Object","entries","map","_ref2","_ref3","day","marginBottom","textAlign","charAt","toUpperCase","slice","index","borderRadius","overflow","padding","marginTop","onPress","textDecorationLine"],"sources":["C:/Users/amir0/Documents/Free-Food-Monash-main/AppStyles.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  SafeAreaView,\n  View,\n  Text,\n  ScrollView,\n  TouchableOpacity,\n  Linking,\n  Dimensions,\n} from \"react-native\";\nimport axios from \"axios\";\n\nconst { width } = Dimensions.get('window');\nconst cardWidth = width * 0.8; // 80% of screen width\n\nconst App = () => {\n  const [scheduleData, setScheduleData] = useState({\n    monday: { time: [], event_name: [], location: [] },\n    tuesday: { time: [], event_name: [], location: [] },\n    wednesday: { time: [], event_name: [], location: [] },\n    thursday: { time: [], event_name: [], location: [] },\n    friday: { time: [], event_name: [], location: [] },\n  });\n  const [currentTime, setCurrentTime] = useState(new Date());\n\n  useEffect(() => {\n    const interval = setInterval(() => setCurrentTime(new Date()), 60000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const currentDate = currentTime.toLocaleString(\"en-US\", { timeZone: \"Australia/Sydney\" });\n  const currentDay = new Intl.DateTimeFormat('en-US', { weekday: 'long', timeZone: \"Australia/Sydney\" }).format(currentTime).toLowerCase();\n  const currentHour = currentTime.getHours();\n  const currentMinute = currentTime.getMinutes();\n\n  const openGoogleMaps = (location) => {\n    // ... (keep the existing openGoogleMaps function)\n  };\n\n  const isCurrentEvent = (eventTime, eventDay) => {\n    // ... (keep the existing isCurrentEvent function)\n  };\n\n  useEffect(() => {\n    const fetchScheduleData = async () => {\n      try {\n        const response = await axios.get('https://free-food-monash-api-337668b48c95.herokuapp.com/json-object');\n        setScheduleData(response.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchScheduleData();\n  }, []);\n\n  return (\n    <SafeAreaView style={{ flex: 1, backgroundColor: '#FF6900' }}>\n      <View style={{ alignItems: 'center', paddingVertical: 10 }}>\n        <Text style={{ fontSize: 28, fontWeight: 'bold', color: 'white', fontFamily: 'Helvetica' }}>\n          Monash Free Food Guide\n        </Text>\n      </View>\n      <ScrollView contentContainerStyle={{ alignItems: 'center', paddingBottom: 16 }}>\n        {Object.entries(scheduleData).map(([day, data]) => (\n          <View key={day} style={{ marginBottom: 18, width: cardWidth }}>\n            <Text style={{ fontSize: 20, fontWeight: 'bold', color: 'white', marginBottom: 8, textAlign: 'center' }}>\n              {day.charAt(0).toUpperCase() + day.slice(1)}\n            </Text>\n            {data.time.map((time, index) => (\n              <View\n                key={index}\n                style={{\n                  marginBottom: 8,\n                  borderRadius: 10,\n                  overflow: 'hidden',\n                  backgroundColor: isCurrentEvent(time, day) ? '#4CAF50' : 'white',\n                  width: '100%',\n                }}\n              >\n                {isCurrentEvent(time, day) && (\n                  <Text style={{ fontSize: 16, fontWeight: 'bold', color: 'white', padding: 8, backgroundColor: '#4CAF50' }}>\n                    Happening now!\n                  </Text>\n                )}\n                <View style={{ padding: 12 }}>\n                  <Text style={{ fontSize: 16, fontWeight: 'bold', color: isCurrentEvent(time, day) ? 'white' : 'black' }}>\n                    {time}\n                  </Text>\n                  <Text style={{ fontWeight: 'bold', color: isCurrentEvent(time, day) ? 'white' : 'black', marginTop: 4 }}>\n                    {data.event_name[index]}\n                  </Text>\n                  <TouchableOpacity onPress={() => openGoogleMaps(data.location[index])}>\n                    <Text style={{ color: isCurrentEvent(time, day) ? 'lightblue' : 'blue', textDecorationLine: 'underline', marginTop: 4 }}>\n                      {data.location[index]}\n                    </Text>\n                  </TouchableOpacity>\n                </View>\n              </View>\n            ))}\n          </View>\n        ))}\n      </ScrollView>\n      <View style={{ padding: 8, alignItems: 'center' }}>\n        <Text style={{ color: 'white' }}>Created by Amir©</Text>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}